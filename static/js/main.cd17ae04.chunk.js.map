{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api/api.ts","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","FindMovie","addFindMovie","currentMovieList","useState","inputValue","setInputValue","inputValid","setInputValid","selectedMovie","setSelectedMovie","htmlFor","type","id","value","placeholder","onChange","e","target","onClick","url","fetch","then","res","ok","Error","status","statusText","json","result","Response","some","el","App","state","addMovie","newMovie","setState","prev","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cd17ae04.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import React, { useState, Dispatch, SetStateAction } from 'react';\nimport './FindMovie.scss';\nimport { request } from '../../api/api';\nimport { MovieCard } from '../MovieCard';\n\ntype InputValue = {\n  inputValue: string,\n  setInputValue?: Dispatch<SetStateAction<string>>,\n};\n\ntype SelectedMovie = {\n  selectedMovie: Movie,\n  setSelectedMovie?: Dispatch<SetStateAction<Movie>>,\n};\n\ntype Props = {\n  currentMovieList: Movie[],\n  addFindMovie: any,\n};\n\ntype InputValid = {\n  inputValid: boolean,\n  setInputValid?: Dispatch<SetStateAction<boolean>>,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addFindMovie, currentMovieList }) => {\n  const [inputValue, setInputValue] = useState<InputValue>({ inputValue: '' });\n  const [inputValid, setInputValid] = useState<InputValid>({ inputValid: true });\n  const [selectedMovie, setSelectedMovie] = useState<SelectedMovie>();\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                value={inputValue.inputValue}\n                placeholder=\"Enter a title to search\"\n                className=\"input is-danger\"\n                onChange={(e) => {\n                  setInputValid({ inputValid: true });\n                  setInputValue({ inputValue: `${e.target.value}` });\n                }}\n              />\n            </div>\n          </label>\n\n          {!inputValid.inputValid && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => {\n                request(inputValue.inputValue)\n                  .then(result => {\n                    if (result.Response === 'True') {\n                      setSelectedMovie({ selectedMovie: result });\n                      setInputValue({ inputValue: '' });\n                    } else {\n                      setInputValid({ inputValid: false });\n                    }\n                  });\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                if (selectedMovie) {\n                  if (!currentMovieList.some(el => {\n                    return el.imdbID === selectedMovie.selectedMovie.imdbID;\n                  })) {\n                    addFindMovie(selectedMovie.selectedMovie);\n                  }\n                }\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {selectedMovie && <MovieCard movie={selectedMovie.selectedMovie} />}\n      </div>\n    </>\n  );\n};\n","const BASE_URL = 'http://www.omdbapi.com/?i=tt3896198&apikey=94f8694e&';\n\nexport function request(url: string) {\n  return fetch(`${BASE_URL}t=${url}`)\n    .then(res => {\n      if (!res.ok) {\n        throw new Error(`${res.status} - ${res.statusText}`);\n      }\n\n      return res.json();\n    });\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    movies: [],\n  };\n\n  addMovie = (newMovie: Movie) => {\n    this.setState((prev) => ({\n      movies: [...prev.movies, newMovie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addFindMovie={this.addMovie} currentMovieList={movies} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}